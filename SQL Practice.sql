-- Retrieve all Customer Data
SELECT * 
FROM amazon.amazon_sales;


-- Retrieve all Columns, DataTypes, Null, and Keys
DESCRIBE amazon.amazon_sales;


-- Retrieve total number of records
SELECT COUNT(*) 
FROM amazon.amazon_sales;            -- There are total 21898 rows in the Data


-- Unique Values in Month Column
SELECT 
DISTINCT Month 
FROM amazon.amazon_sales; 


-- All Unique values in Order Status
SELECT 
DISTINCT Order_Status
FROM amazon.amazon_sales; 
    
    
-- Unique values in Fulfilment 
SELECT 
DISTINCT Fulfilment
FROM amazon.amazon_sales; 
    

-- Unique values in Courier_Status
SELECT 
DISTINCT Courier_Status
FROM amazon.amazon_sales;                       -- * There are some null rows 
    
    
-- All Unique Cities in the Data
SELECT 
DISTINCT City
FROM amazon.amazon_sales;                       -- *  Inconsistency data in the City Column  like:- Banglore and BANGLORE  
    
    
-- All Unique States in the Data
SELECT 
DISTINCT State
FROM amazon.amazon_sales;                       -- *  Inconsistency data in the State Column  like:- Delhi and New Delhi  


-- Top 5 Customers by TotalRevenue
SELECT
Order_ID,
SUM(Amount_INR) AS TotalRevenue
FROM amazon.amazon_sales
GROUP BY Order_ID
ORDER BY TotalRevenue DESC LIMIT 5;


-- Top 5 Category by TotalRevenue
SELECT
Category,
SUM(Amount_INR) AS TotalRevenue
FROM amazon.amazon_sales
GROUP BY Category
ORDER BY TotalRevenue DESC LIMIT 5;


-- Top 5 Months by TotalRevenue
SELECT 
Month,
SUM(Amount_INR) AS TotalRevenue
FROM amazon.amazon_sales
GROUP BY Month
ORDER BY TotalRevenue DESC LIMIT 5;


-- Top 5 States by TotalRevenue
SELECT 
State,
SUM(Amount_INR) AS TotalRevenue
FROM amazon.amazon_sales
GROUP BY State
ORDER BY TotalRevenue DESC LIMIT 5;
    

/*  Here I am updating [State] Inconsistency data, but it is not executing. 

# This is the Query!
UPDATE amazon.amazon_sales
SET State = 'DELHI'
WHERE LOWER(State) = 'new delhi';

# Select Statement returing the data but update is not working!
SELECT 
State
FROM amazon.amazon_sales
WHERE LOWER(State) = 'pondicherry'

-- Deleting Inconsistency data Rows, but this is also not working!
DELETE FROM amazon.amazon_sales
WHERE State = 'New Delhi';

*/ 

-- Total Customers in every State!
SELECT 
State,
COUNT(*) AS Customers_Num
FROM amazon.amazon_sales
GROUP BY State
ORDER BY Customers_Num DESC;


-- Average order value per state
SELECT 
State,
Category,
SUM(Amount_INR) / COUNT(DISTINCT Order_ID) AS AveragePrice
FROM amazon.amazon_sales
WHERE State != ""
GROUP BY State, Category;


-- Top 3 States and Categories by TotalRevenue!
SELECT 
State,
Category,
SUM(Amount_INR) AS TotalRevenue 
FROM amazon.amazon_sales
GROUP BY State, Category
ORDER BY TotalRevenue DESC LIMIT 3;


-- Highest Total Revenue Generated by State & Category
WITH temp_table AS (
  SELECT 
    State, 
    Category, 
    SUM(Amount_INR) AS TotalRevenue
  FROM amazon.amazon_sales
  WHERE State != ""
  GROUP BY State, Category
),
State_Category_Revenue AS (
  SELECT 
    State,
    Category,
    TotalRevenue,
    RANK() OVER (PARTITION BY State ORDER BY TotalRevenue DESC) AS RankPosition
  FROM temp_table
)
SELECT 
State, 
Category, 
TotalRevenue
FROM State_Category_Revenue
WHERE RankPosition = 1;


-- Most Cancelled Orders by State
SELECT 
State,
COUNT(*) AS TotalCancelledOrder
FROM amazon.amazon_sales
WHERE Order_Status = "Cancelled"
GROUP BY State
ORDER BY TotalCancelledOrder DESC;


-- TotatRevenue generated by Every State in each Month
SELECT 
State,
Month,
SUM(Amount_INR) AS TotalRevenue
FROM amazon.amazon_sales
WHERE State != ""
GROUP BY State, Month
ORDER BY State, Month;

 
 -- % Revenue contribution of each category
 SELECT 
  Category,
  ROUND(SUM(Amount_INR) / (SELECT SUM(Amount_INR) FROM amazon.amazon_sales) * 100,2) AS RevenuePercentage
FROM amazon.amazon_sales
GROUP BY Category
ORDER BY RevenuePercentage DESC;


-- Category Demand in the Data
SELECT 
Category,
SUM(Quantity) AS TotalQuantity
FROM amazon.amazon_sales
GROUP BY Category
ORDER BY TotalQuantity DESC;


-- Average Price for Each Category
SELECT 
Category,
ROUND(AVG(Amount_INR),0) AS AverageAmount
FROM amazon.amazon_sales
GROUP BY Category
ORDER BY AverageAmount DESC;


-- Category Demand in Each Month by TotalQuantity Sold
SELECT
Month,
Category,
SUM(Quantity) AS TotalQuantity 
FROM amazon.amazon_sales
GROUP BY Month, Category
ORDER BY Month, Category;


-- Top 5 Cancelled Order Category
SELECT
Category,
COUNT(*) AS TotalCancelledOrders
FROM amazon.amazon_sales
WHERE Order_Status = "Cancelled"
GROUP BY Category
ORDER BY TotalCancelledOrders DESC LIMIT 5;


-- Categories Demand in Each Month
WITH temp_table AS (
  SELECT 
    Category, 
    Month,
    SUM(Quantity) AS TotalQuantity
  FROM amazon.amazon_sales
  GROUP BY Category, Month
),
Category_Demand AS (
  SELECT 
    Category,
    Month,
    TotalQuantity,
    RANK() OVER (PARTITION BY Month ORDER BY TotalQuantity DESC) AS RankPosition
  FROM temp_table
)
SELECT
Month,  
Category,
TotalQuantity
FROM Category_Demand
WHERE RankPosition = 1;


-- Active customers in Every Month
SELECT 
Month,
COUNT(*) AS NumberOfTimes
FROM amazon.amazon_sales
GROUP BY Month
ORDER BY NumberOfTimes DESC;


-- Cancelled Orders by Months
SELECT 
Month,
COUNT(*) AS CancelledOrders
FROM amazon.amazon_sales
WHERE Order_Status = "Cancelled"
GROUP BY Month
ORDER BY CancelledOrders DESC;
